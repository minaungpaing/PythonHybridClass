int -> integer
str -> string
bool -> true,flase
float - 0.2,0.5

len() -> length

range(10) 		-> 		0 t0 9!
range(5,10) 	-> 		5 to 9! 
range(0,10,3)	->		divisible by 3!

sum(range(4))	-> 		0+1+2+3
list(range(5))	->		[0,1,2,3,4]

a.append()		-> 		added on the end! 
a.remove()		->		remove on the end!
a.reverse()		->		reverse the array!
a.sort()		->		sort the array!
a.count()		-> 		number of index!
a.index()		->		index of array

# 				-> comment (Ctrl + ?)

squares = list(map(lambda x: x**2, range(10)))
>>> squares = []
>>> for x in range(10):
...     squares.append(x**2)
...
>>> squares
[0, 1, 4, 9, 16, 25, 36, 49, 64, 81]

>>> [(x, y) for x in [1,2,3] for y in [3,1,4] if x != y]
[(1, 3), (1, 4), (2, 3), (2, 1), (2, 4), (3, 1), (3, 4)]

matrix = [
	[1,2,3,4],
	[5,6,7,8],
	[9,10,11,12],
]


>>> basket = { 'apple', 'orange', 'apple', 'pear' , 'banana'}
>>> print(basket)
{'banana', 'orange', 'apple', 'pear'}
>>> basket.append(orange)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
AttributeError: 'set' object has no attribute 'append'
>>> print(basket)
{'banana', 'orange', 'apple', 'pear'}
>>> basket = { 'apple', 'orange', 'apple', 'pear','orange' , 'banana'}
>>> print(basket)
{'banana', 'orange', 'apple', 'pear'}
>>> basket = {'banana' ,'apple','cucumber','pineapple', 'orange','grape', 'apple', 'pear','orange' , 'banana'}
>>> print(basket)
{'banana', 'orange', 'grape', 'cucumber', 'pineapple', 'pear', 'apple'}
>>> 'orange' in basket
True
>>> 'grass' in basket
False
>>>


basket = {'apple', 'orange', 'apple', 'pear', 'orange', 'banana'}
print(basket)                      # show that duplicates have been removed

'orange' in basket                 # fast membership testing

'crabgrass' in basket


# Demonstrate set operations on unique letters from two words

a = set('abracadabra')
b = set('alacazam')
a                                  # unique letters in a

a - b                              # letters in a but not in b

a | b                              # letters in a or b or both

a & b                              # letters in both a and b

a ^ b                              # letters in a or b but not both



for f in sorted(set(basket)):
